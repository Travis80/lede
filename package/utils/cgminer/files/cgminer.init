#!/bin/sh /etc/rc.common

START=99

USE_PROCD=1
PROG=/usr/bin/cgminer

validate_pool_section()
{
	uci_validate_section cgminer pool "${1}" \
		'server:string' \
		'port:port' \
		'user:string' \
		'password:string'
}

validate_miner_section()
{
	uci_validate_section cgminer miner "${1}" \
		'frequency:range(120,1332):1332' \
		'voltage:range(10,15):10' \
		'chains:list(range(0,5))'
}

load_pools()
{
	local server port user password

	validate_pool_section "${1}" || {
		echo "pool validation failed"
		return 1
	}

	pools=" ${pools} -o $server:$port -u $user -p $password"
}

convert_chains()
{
	res="$1"
	shift
	for i in "$@"; do
		res="${res},$i"
	done
	chains="$res"
}

start_service()
{
	local frequency voltage chains pools

	validate_miner_section miner || {
		echo "miner validation failed"
		return 1
	}

	convert_chains $chains

	config_load cgminer
	config_foreach load_pools pool

	procd_open_instance
	procd_set_param command "$PROG" $pools
	for i in $(seq 1 6); do
		procd_append_param command --A1Pll$i $frequency
	done
	procd_append_param command --A1Vol $voltage
	[ -n "$chains" ] && procd_append_param command --enabled-chains "$chains"
	procd_append_param command --api-listen --api-allow W:127.0.0.1
	procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-0}
	# forward stdout and stderr to logd
	procd_set_param stdout 0
	procd_set_param stderr 1
	procd_close_instance
}

service_triggers()
{
	procd_add_reload_trigger "cgminer"

	procd_open_validate
	validate_pool_section
	validate_miner_section
	procd_close_validate
}
